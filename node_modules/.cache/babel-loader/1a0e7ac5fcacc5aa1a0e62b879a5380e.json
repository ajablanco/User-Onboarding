{"ast":null,"code":"var _jsxFileName = \"/Users/ajablanco/Desktop/LAMBDA/user-onboarding/src/Components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport PasswordMask from \"react-password-mask\";\n\nconst UserForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    console.log(\"status has changed\", status);\n    status && setUsers(users => [...users, status]);\n  }, [status]);\n  return React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Name :\", React.createElement(Field, {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Your name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, errors.name)), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Email\", React.createElement(Field, {\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Password\", React.createElement(PasswordMask, {\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Enter password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Terms of Service\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    checked: values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, JSON.stringify(values, null, 2)), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, JSON.stringify(errors, null, 2)), users.map(user => {\n    return React.createElement(\"ul\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Name: \", user.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Email: \", user.email));\n  }));\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      terms: props.terms || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Please enter your name\"),\n    email: Yup.string().required(\"Please enter your email\")\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    console.log(\"submitting\", values);\n    axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n      console.log(\"success\", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(UserForm);\nexport default FormikUserForm;","map":{"version":3,"sources":["/Users/ajablanco/Desktop/LAMBDA/user-onboarding/src/Components/Form.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","PasswordMask","UserForm","values","errors","touched","status","users","setUsers","console","log","name","email","terms","JSON","stringify","map","user","id","FormikUserForm","mapPropsToValues","props","password","validationSchema","object","shape","string","required","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,MAAlC;AACAA,IAAAA,MAAM,IAAIE,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWD,MAAX,CAAV,CAAlB;AACD,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGD,OAAO,CAACM,IAAR,IAAgBP,MAAM,CAACO,IAAvB,IACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBP,MAAM,CAACO,IAA9B,CAJJ,CADF,EAQE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAA2C,IAAA,WAAW,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGN,OAAO,CAACO,KAAR,IAAiBR,MAAM,CAACQ,KAAxB,IACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBR,MAAM,CAACQ,KAA9B,CAJJ,CARF,EAeE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,EAuBE;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,OAAO,EAAET,MAAM,CAACU,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAvBF,EA4BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,CADF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeZ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAN,CA/BF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMW,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAN,CAhCF,EAiCGG,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AACjB,WACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWD,IAAI,CAACN,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYM,IAAI,CAACL,KAAjB,CAFF,CADF;AAMD,GAPA,CAjCH,CADF;AA4CD,CAnDD;;AAqDA,MAAMO,cAAc,GAAGvB,UAAU,CAAC;AAChCwB,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,WAAO;AACLV,MAAAA,IAAI,EAAEU,KAAK,CAACV,IAAN,IAAc,EADf;AAELC,MAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,IAAe,EAFjB;AAGLU,MAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,IAAkB,EAHvB;AAILT,MAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,IAAe;AAJjB,KAAP;AAMD,GAR+B;;AAUhCU,EAAAA,gBAAgB,EAAExB,GAAG,CAACyB,MAAJ,GAAaC,KAAb,CAAmB;AACnCd,IAAAA,IAAI,EAAEZ,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAD6B;AAEnCf,IAAAA,KAAK,EAAEb,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB;AAF4B,GAAnB,CAVc;;AAehCC,EAAAA,YAAY,CAACzB,MAAD,EAAS;AAAE0B,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAT,EAAmC;AAC7CrB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,MAA1B;AACAH,IAAAA,KAAK,CACF+B,IADH,CACQ,8BADR,EACwC5B,MADxC,EAEG6B,IAFH,CAEQC,GAAG,IAAI;AACXxB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBuB,GAAvB;AACAJ,MAAAA,SAAS,CAACI,GAAG,CAACC,IAAL,CAAT;AACAJ,MAAAA,SAAS;AACV,KANH,EAOGK,KAPH,CAOSC,GAAG,IAAI3B,OAAO,CAACC,GAAR,CAAY0B,GAAG,CAACC,QAAhB,CAPhB;AAQD;;AAzB+B,CAAD,CAAV,CA0BpBnC,QA1BoB,CAAvB;AA4BA,eAAeiB,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport PasswordMask from \"react-password-mask\";\n\nconst UserForm = ({ values, errors, touched, status }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed\", status);\n    status && setUsers(users => [...users, status]);\n  }, [status]);\n  return (\n    <div className=\"form\">\n      <Form>\n        <label htmlFor=\"name\">\n          Name : \n          <Field id=\"name\" type=\"text\" name=\"name\" placeholder=\"Your name\" />\n          {touched.name && errors.name && (\n            <p className=\"errors\">{errors.name}</p>\n          )}\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <Field id=\"email\" type=\"text\" name=\"email\" placeholder=\"Your email\" />\n          {touched.email && errors.email && (\n            <p className=\"errors\">{errors.email}</p>\n          )}\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <PasswordMask\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n          />\n        </label>\n        <label className=\"checkbox-container\">\n          Terms of Service\n          <Field type=\"checkbox\" name=\"terms\" checked={values.terms} />\n          <span className=\"checkmark\" />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </Form>\n      <pre>{JSON.stringify(values, null, 2)}</pre>\n      <pre>{JSON.stringify(errors, null, 2)}</pre>\n      {users.map(user => {\n        return (\n          <ul key={user.id}>\n            <li>Name: {user.name}</li>\n            <li>Email: {user.email}</li>\n          </ul>\n        );\n      })}\n    </div>\n  );\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      terms: props.terms || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Please enter your name\"),\n    email: Yup.string().required(\"Please enter your email\"),\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    console.log(\"submitting\", values);\n    axios\n      .post(\"https://reqres.in/api/users/\", values)\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  }\n})(UserForm);\n\nexport default FormikUserForm;\n"]},"metadata":{},"sourceType":"module"}